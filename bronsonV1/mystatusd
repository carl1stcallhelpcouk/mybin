#!/bin/sh
# kFreeBSD do not accept scripts as interpreters, using #!/bin/sh and sourcing.
if [ true != "$INIT_D_SCRIPT_SOURCED" ] ; then
    set "$0" "$@"; INIT_D_SCRIPT_SOURCED=true . /lib/init/init-d-script
fi
### BEGIN INIT INFO
# Provides:          mystatusd
# Required-Start:    $local_fs $network $named $portmap $remote_fs $syslog $time
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: mystatus Logging Server
# Description:       This provides a ncat server running on port 5000
#                    and logs all data recieved to a logfile.
### END INIT INFO

# Author: Carl McAlwane <carl@1stcallhelp.co.uk>
#

DESC="mystatus Logger"
DAEMON=/home/carl/bin/bronson/mystatusd.sh

dir="/home/carl"
cmd="${DAEMON}"
user=""

name=`basename $0`
pid_file="/var/run/$name.pid"
stdout_log="/var/log/$name.log"
stderr_log="/var/log/$name.err"

get_pid() {
    cat "$pid_file"
}

is_running() {
    [ -f "$pid_file" ] && ps `get_pid` > /dev/null 2>&1
}

case "$1" in
    start)
    if is_running; then
        echo "Already started" | tee -a ${stderr_log}
    else
        echo "Starting $name" | tee -a "${stderr_log}"
        cd "$dir"
        if [ -z "$user" ]; then
            $cmd >> "$stdout_log" 2>> "$stderr_log" &
        else
            sudo -u "$user" $cmd >> "$stdout_log" 2>> "$stderr_log" &
        fi
        echo $! > "$pid_file"
        if ! is_running; then
            echo "Unable to start, see $stdout_log and $stderr_log" | tee -a ${stderr_log}
            exit 1
        fi
    fi
    ;;
    stop)
    if is_running; then
        echo -n "Stopping $name.." | tee -a ${stderr_log}
        rkill `get_pid`
        for i in {1..10}
        do
            if ! is_running; then
                break
            fi

            echo -n "." | tee -a ${stderr_log}
            sleep 1
        done
        echo

        if is_running; then
            echo "Not stopped; may still be shutting down or shutdown may have failed"  | tee -a ${stderr_log}
            exit 1
        else
            echo "Stopped"  | tee -a ${stderr_log}
            if [ -f "$pid_file" ]; then
                rm "$pid_file"
            fi
        fi
    else
        echo "Not running" | tee -a ${stderr_log}
    fi
    ;;
    restart)
    $0 stop
    if is_running; then
        echo "Unable to stop, will not attempt to start"  | tee -a ${stderr_log}
        exit 1
    fi
    $0 start
    ;;
    status)
    if is_running; then
        echo "Running" | tee -a ${stderr_log}
    else
        echo "Stopped" | tee -a ${stderr_log}
        exit 1
    fi
    ;;
    *)
    echo "Usage: $0 {start|stop|restart|status}" | tee -a ${stderr_log}
    exit 1
    ;;
esac

exit 0